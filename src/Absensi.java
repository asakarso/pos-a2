import java.sql.*;  
import javax.swing.*;  
import javax.swing.table.*;  
import java.text.SimpleDateFormat;  
import com.toedter.calendar.JDateChooser;  
import java.util.Date;
import java.text.ParseException;

/**
 *
 * @author ASUS
 */
public class Absensi extends javax.swing.JFrame {
    public JDateChooser tgl; // Deklarasi variabel tgl
    
    public void tampil_data() {
        DefaultTableModel tabel = new DefaultTableModel();
        tabel.addColumn("Id Absensi");
        tabel.addColumn("Id Pegawai");
        tabel.addColumn("Nama Pegawai");
        tabel.addColumn("Jabatan");
        tabel.addColumn("Tanggal");
        tabel.addColumn("Status");
        tabel.addColumn("Gender");
        tabel.addColumn("No HP");

        try {
            java.sql.Connection conn = (java.sql.Connection) absensi.Koneksi.koneksiDB();
            String sql = "SELECT * FROM absen_pegawai";
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            java.sql.ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                String id_pegawai = rs.getString("id_pegawai");
                String sqlPegawai = "SELECT * FROM pegawai WHERE id_pegawai = ?";
                java.sql.PreparedStatement p = conn.prepareStatement(sqlPegawai);
                p.setString(1, id_pegawai);
                ResultSet r = p.executeQuery();  // Menggunakan p.executeQuery()

                String nama_pegawai = "";
                String jabatan = "";
                String gender = "";
                String no_hp = "";

                if (r.next()) {
                    nama_pegawai = r.getString("nama_pegawai");
                    jabatan = r.getString("jabatan");
                    gender = r.getString("gender");
                    no_hp = r.getString("no_hp");
                } else {
                    JOptionPane.showMessageDialog(this, "Menu tidak ditemukan untuk ID Pegawai: " + id_pegawai);
                    continue;  // Melanjutkan ke iterasi berikutnya jika pegawai tidak ditemukan
                }

                tabel.addRow(new Object[]{
                    rs.getString("id_absen"), 
                    rs.getString("id_pegawai"), 
                    nama_pegawai,
                    jabatan,
                    rs.getString("tanggal"), 
                    rs.getString("status"), 
                    gender,
                    no_hp,
                });
            }

            jTable.setModel(tabel);

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }
    private void clearFields() {
        idAbsensi.setText("");
        idPegawai.setSelectedIndex(0);
        status.setSelectedIndex(0);
        noHp.setText("");
        kalender.setDate(null);
        gender.setSelectedIndex(0);
    }

    public Absensi() {
        initComponents(); 
        tgl = new JDateChooser(); 
        add(tgl); 
        tampil_data();
        clearFields();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        idAbsensi = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tb_simpan = new javax.swing.JButton();
        tb_edit = new javax.swing.JButton();
        tb_hapus = new javax.swing.JButton();
        tb_batal = new javax.swing.JButton();
        tb_cari = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cari = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        status = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        kalender = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        gender = new javax.swing.JComboBox<>();
        tanggal = new javax.swing.JLabel();
        noHp = new javax.swing.JTextField();
        idPegawai = new javax.swing.JComboBox<>();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 48)); // NOI18N
        jLabel1.setText("ABSENSI PEGAWAI");

        jLabel2.setText("Id Absensi");

        idAbsensi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idAbsensiActionPerformed(evt);
            }
        });

        jLabel3.setText("Id Pegawai ");

        jLabel4.setText("Status");

        tb_simpan.setBackground(new java.awt.Color(165, 222, 255));
        tb_simpan.setText("Simpan");
        tb_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tb_simpanActionPerformed(evt);
            }
        });

        tb_edit.setBackground(new java.awt.Color(165, 221, 255));
        tb_edit.setText("Edit");
        tb_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tb_editActionPerformed(evt);
            }
        });

        tb_hapus.setBackground(new java.awt.Color(165, 222, 255));
        tb_hapus.setText("Hapus");
        tb_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tb_hapusActionPerformed(evt);
            }
        });

        tb_batal.setBackground(new java.awt.Color(165, 222, 255));
        tb_batal.setText("Batal");
        tb_batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tb_batalActionPerformed(evt);
            }
        });

        tb_cari.setText("Cari");
        tb_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tb_cariActionPerformed(evt);
            }
        });

        jLabel6.setText("Cari");

        cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariActionPerformed(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable);

        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hadir", "Cuti", "Sakit", "Alpa" }));
        status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusActionPerformed(evt);
            }
        });

        jLabel8.setText("No. Hp");

        kalender.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                kalenderPropertyChange(evt);
            }
        });

        jLabel9.setText("Gender");

        gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Laki-Laki", "Perempuan" }));

        tanggal.setText("Tanggal");

        noHp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noHpActionPerformed(evt);
            }
        });

        idPegawai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(41, 41, 41)
                                    .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(32, 32, 32)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(noHp, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(kalender, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(34, 34, 34)
                                            .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(idAbsensi, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(idPegawai, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(tb_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tb_simpan)
                                        .addGap(78, 78, 78)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tb_hapus)
                                .addGap(24, 24, 24)
                                .addComponent(tb_batal)))
                        .addGap(108, 108, 108)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tb_cari))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(274, 274, 274)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(862, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(idAbsensi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)
                                    .addComponent(tb_cari)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addComponent(idPegawai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(147, 147, 147)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(noHp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(kalender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tanggal)
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tb_simpan)
                            .addComponent(tb_edit)
                            .addComponent(tb_hapus)
                            .addComponent(tb_batal)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(273, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void idAbsensiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idAbsensiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idAbsensiActionPerformed

    private void tb_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tb_simpanActionPerformed
                                          
        try {
            // Mengambil nilai dari komponen yang benar
            String idabsensi = idAbsensi.getText();  
            String idpegawai = (String) idPegawai.getSelectedItem(); 
            String statusSelected = (String) status.getSelectedItem();  
            java.sql.Date tanggal = new java.sql.Date(kalender.getDate().getTime());

            // Menyusun query SQL dengan prepared statement
            String sql = "INSERT INTO absen_pegawai (id_absen, id_pegawai, status,  tanggal) VALUES (?, ?, ?, ? )";

            // Mendapatkan koneksi ke database
            java.sql.Connection conn = absensi.Koneksi.koneksiDB();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);

            pst.setString(1, idabsensi);
            pst.setString(2, idpegawai);
            pst.setString(3, statusSelected);
            pst.setString(4, tanggal.toString());

            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Berhasil disimpan");
            tampil_data();
            clearFields();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Gagal disimpan");
            System.out.println(e.getMessage());
        }

    }//GEN-LAST:event_tb_simpanActionPerformed

    private void tb_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tb_cariActionPerformed
      try {
            java.sql.Connection conn=(java.sql.Connection)absensi.Koneksi.koneksiDB();
            String sql = "Select * from absen_pegawai where id_pegawai='"+cari.getText()+"'";
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery(sql);
            if (rs.next()){
                 idAbsensi.getText();  
                 idPegawai.getSelectedItem(); 
                 status.getSelectedItem();  
                kalender.setDate(null); 
                JOptionPane.showMessageDialog(null,"Data absen_pegawai : "
                + cari.getText() + " ditemukan");
            }
        } catch (Exception e){
            cari.requestFocus();
        }
    }//GEN-LAST:event_tb_cariActionPerformed

    private void statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusActionPerformed

    private void kalenderPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_kalenderPropertyChange
        if (kalender.getDate() != null) {
            SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
            String tgl_lahir = format.format(kalender.getDate());
            System.out.println("Tanggal: " + kalender); 
        }
    }//GEN-LAST:event_kalenderPropertyChange

    private void tb_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tb_editActionPerformed
       try {
   
            // Mengatur nilai untuk parameter
            String idabsensi = idAbsensi.getText();  
            String idpegawai = (String) idPegawai.getSelectedItem();  
            String statusSelected = (String) status.getSelectedItem(); 
            String genderSelected = (String) gender.getSelectedItem();   
            String hpText = noHp.getText(); 
            java.sql.Date tanggal = new java.sql.Date(kalender.getDate().getTime());  

            java.sql.Connection conn = (java.sql.Connection) absensi.Koneksi.koneksiDB();
            String sql = "UPDATE absen_pegawai SET id_pegawai=?, status=?,tanggal=? WHERE id_absen=?";
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);

                pst.setString(1, idpegawai);
                pst.setString(2, statusSelected);
                pst.setString(3, tanggal.toString());
                pst.setString(4, idabsensi);
                pst.executeUpdate();

            JOptionPane.showMessageDialog(null, "Data berhasil di Koreksi");
            tampil_data();
            clearFields();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Proses Edit data Gagal");
            System.out.println(e.getMessage());
        }

    }//GEN-LAST:event_tb_editActionPerformed

    private void tb_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tb_hapusActionPerformed
        try {

          java.sql.Connection conn = absensi.Koneksi.koneksiDB();

          String idabsensi = idAbsensi.getText().trim();
          if (idabsensi.isEmpty()) {
              JOptionPane.showMessageDialog(null, "Nomor tidak boleh kosong!");
              return;
          }

          String sql = "DELETE FROM absen_pegawai WHERE id_absen = ?";
          java.sql.PreparedStatement pst = conn.prepareStatement(sql);
          pst.setString(1, idabsensi);
          int rowsAffected = pst.executeUpdate();
          if (rowsAffected > 0) {
              JOptionPane.showMessageDialog(null, "Data berhasil dihapus");
          } else {
              JOptionPane.showMessageDialog(null, "Data tidak ditemukan");
          }
          // Panggil method untuk menampilkan data (jika ada)
          tampil_data();
          clearFields();

          // Tutup PreparedStatement dan koneksi
          pst.close();
          conn.close();

      } catch (Exception e) {
          JOptionPane.showMessageDialog(null, "Proses penghapusan gagal");
          System.out.println("Error: " + e.getMessage());
          e.printStackTrace();  
      }

    }//GEN-LAST:event_tb_hapusActionPerformed

    private void tb_batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tb_batalActionPerformed
        clearFields();      
    }//GEN-LAST:event_tb_batalActionPerformed

    private void noHpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noHpActionPerformed
        try {

            String idPegawaiValue = (String) idPegawai.getSelectedItem();
            if (idPegawaiValue == null || idPegawaiValue.trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "ID Pegawai tidak boleh kosong.");
                return;
            }

            java.sql.Connection conn = absensi.Koneksi.koneksiDB();
            if (conn == null) {
                JOptionPane.showMessageDialog(null, "Gagal terhubung ke database.");
                return;
            }

            System.out.println("Koneksi berhasil. ID Pegawai: " + idPegawaiValue);

            String sql = "SELECT no_telepon FROM pegawai WHERE id_pegawai = ?";

            java.sql.PreparedStatement pst = conn.prepareStatement(sql);

            pst.setString(1, idPegawaiValue);

            ResultSet rs = pst.executeQuery();

            if (rs.next()) {

                String noTelepon = rs.getString("no_telepon");

                noHp.setText(noTelepon);

                JOptionPane.showMessageDialog(null, "Nomor telepon berhasil ditemukan: " + noTelepon);
            } else {

                JOptionPane.showMessageDialog(null, "Data pegawai tidak ditemukan.");
            }

            rs.close();
            pst.close();
            conn.close();
        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_noHpActionPerformed

    private void cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cariActionPerformed

    private void jTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTableKeyReleased

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked
        // TODO add your handling code here:
        int selectedRow = jTable.getSelectedRow();
        if (selectedRow != -1){
            String id_absensi = jTable.getValueAt(selectedRow, 0).toString();
            String id_pegawai = jTable.getValueAt(selectedRow, 1).toString();
            String status_pegawai = jTable.getValueAt(selectedRow, 5).toString();
            String no_hp = jTable.getValueAt(selectedRow, 7).toString();
            String tanggal_absensi = jTable.getValueAt(selectedRow, 4).toString();
            String gender_pegawai = jTable.getValueAt(selectedRow, 6).toString();
            
            
            SimpleDateFormat sdfTanggal = new SimpleDateFormat("yyyy-MM-dd"); 
            
            try {
                // Mengonversi string tanggal ke objek Date
                Date date = sdfTanggal.parse(tanggal_absensi);

                // Set objek Date ke kalender
                kalender.setDate(date);

            } catch (ParseException e) {
                JOptionPane.showMessageDialog(this, "Format tanggal tidak sesuai!");
                e.printStackTrace();
            }
            
            idAbsensi.setText(id_absensi);
            idPegawai.setSelectedItem(id_pegawai);
            status.setSelectedItem(status_pegawai);
            noHp.setText(no_hp);
            gender.setSelectedItem(gender_pegawai);
        }
    }//GEN-LAST:event_jTableMouseClicked
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                // Membuat objek Absensi dan menampilkannya
                new Absensi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cari;
    private javax.swing.JComboBox<String> gender;
    private javax.swing.JTextField idAbsensi;
    private javax.swing.JComboBox<String> idPegawai;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    private com.toedter.calendar.JDateChooser kalender;
    private javax.swing.JTextField noHp;
    private javax.swing.JComboBox<String> status;
    private javax.swing.JLabel tanggal;
    private javax.swing.JButton tb_batal;
    private javax.swing.JButton tb_cari;
    private javax.swing.JButton tb_edit;
    private javax.swing.JButton tb_hapus;
    private javax.swing.JButton tb_simpan;
    // End of variables declaration//GEN-END:variables

}